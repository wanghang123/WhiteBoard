apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //配置keystore签名
    signingConfigs {
        debugConfig {
            storeFile file(rootProject.ext.storeFile)
            storePassword rootProject.ext.storePassword
            keyAlias rootProject.ext.keyAlias
            keyPassword rootProject.ext.keyPassword
        }

        releaseConfig {
            storeFile file(rootProject.ext.storeFile)
            storePassword rootProject.ext.storePassword
            keyAlias rootProject.ext.keyAlias
            keyPassword rootProject.ext.keyPassword
        }
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix ""//""-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debugConfig
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 签名
            signingConfig signingConfigs.releaseConfig
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    retrolambda {
        javaVersion JavaVersion.VERSION_1_7
    }

    repositories {
        flatDir {
            dirs '../whiteboardlib/libs','libs'
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name
                            .replace(output.outputFile.name
                            , "whiteboard" + "_${variant.versionName}.apk"))
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'

    compile 'com.android.support:design:24.2.1'

    compile project(':whiteboardlib')

    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.zhy:okhttputils:2.6.2'
}
